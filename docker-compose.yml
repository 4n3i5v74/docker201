version: "3"
services:
  postgres:
    container_name: class_postgres
    image: postgres:9.6.3
    restart: unless-stopped
    environment:
      POSTGRES_USER: "myuser"
      POSTGRES_PASSWORD: "myuser-pw!"
      POSTGRES_DB: "gogs"
    volumes:
     - "~/docker-class-201/postgres/data:/var/lib/postgresql/data"
  gogs:
    container_name: class_gogs
    image: gogs/gogs:0.11.19
    restart: unless-stopped
    depends_on:
      - postgres
    links:
      - postgres
    ports:
      - "10022:22"
      - "10080:3000"
    volumes:
     - "~/docker-class-201/gogs/data:/data"
     - "~/docker-class-201/gogs/logs:/app/gogs/log"
  registry:
    container_name: class_registry
    image: registry:2.6.1
    restart: unless-stopped
    ports:
      - "5000:5000"
      - "5001:5001"
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: "/certs/domain.crt"
      REGISTRY_HTTP_TLS_KEY: "/certs/domain.key"
    volumes:
     - "~/docker-class-201/registry/config.yml:/etc/docker/registry/config.yml"
     - "~/docker-class-201/registry/data:/var/lib/registry"
     - "~/docker-class-201/registry/certs:/certs"
     - "~/docker-class-201/registry/htpasswd:/htpasswd"
  jenkins:
    container_name: class_jenkins
    build: 
      context: ./jenkins/docker
    image: spkane/jenkins-class:latest
    restart: unless-stopped
    ports:
      - "10081:8080"
      - "50000:50000"
    volumes:
     - "~/docker-class-201/jenkins/data:/var/jenkins_home"
     - "/var/run/docker.sock:/var/run/docker.sock"
     
